import {
  __spreadArray
} from "./chunk-ZTQOMXPO.js";

// node_modules/@ionic/core/dist/esm-es5/index-a5d50daf.js
var win = typeof window !== "undefined" ? window : void 0;
var doc = typeof document !== "undefined" ? document : void 0;

// node_modules/@ionic/core/dist/esm-es5/animation-eab5a4ca.js
var animationPrefix;
var getAnimationPrefix = function(r) {
  if (animationPrefix === void 0) {
    var n = r.style.animationName !== void 0;
    var e = r.style.webkitAnimationName !== void 0;
    animationPrefix = !n && e ? "-webkit-" : "";
  }
  return animationPrefix;
};
var setStyleProperty = function(r, n, e) {
  var i = n.startsWith("animation") ? getAnimationPrefix(r) : "";
  r.style.setProperty(i + n, e);
};
var addClassToArray = function(r, n) {
  if (r === void 0) {
    r = [];
  }
  if (n !== void 0) {
    var e = Array.isArray(n) ? n : [n];
    return __spreadArray(__spreadArray([], r, true), e, true);
  }
  return r;
};
var createAnimation = function(r) {
  var n;
  var e;
  var i;
  var t;
  var a;
  var f;
  var u = [];
  var o = [];
  var v = [];
  var d = false;
  var c;
  var s = {};
  var l = [];
  var y = [];
  var m = {};
  var p = 0;
  var A = false;
  var g = false;
  var C;
  var b;
  var _;
  var P = true;
  var S = false;
  var T = true;
  var x;
  var E = false;
  var w = r;
  var h = [];
  var k = [];
  var R = [];
  var D = [];
  var F = [];
  var W = [];
  var I = [];
  var K = [];
  var M = [];
  var j = [];
  var q = [];
  var z = typeof AnimationEffect === "function" || win !== void 0 && typeof win.AnimationEffect === "function";
  var B = typeof Element === "function" && typeof Element.prototype.animate === "function" && z;
  var G = function() {
    return q;
  };
  var H2 = function(r2) {
    F.forEach(function(n2) {
      n2.destroy(r2);
    });
    J(r2);
    D.length = 0;
    F.length = 0;
    u.length = 0;
    V();
    d = false;
    T = true;
    return x;
  };
  var J = function(r2) {
    X();
    if (r2) {
      Y();
    }
  };
  var L = function() {
    A = false;
    g = false;
    T = true;
    C = void 0;
    b = void 0;
    _ = void 0;
    p = 0;
    S = false;
    P = true;
    E = false;
  };
  var N = function() {
    return p !== 0 && !E;
  };
  var O = function(r2, n2) {
    var e2 = n2.findIndex(function(n3) {
      return n3.c === r2;
    });
    if (e2 > -1) {
      n2.splice(e2, 1);
    }
  };
  var Q = function(r2, n2) {
    R.push({ c: r2, o: n2 });
    return x;
  };
  var U = function(r2, n2) {
    var e2 = (n2 === null || n2 === void 0 ? void 0 : n2.oneTimeCallback) ? k : h;
    e2.push({ c: r2, o: n2 });
    return x;
  };
  var V = function() {
    h.length = 0;
    k.length = 0;
    return x;
  };
  var X = function() {
    if (B) {
      q.forEach(function(r2) {
        r2.cancel();
      });
      q.length = 0;
    }
  };
  var Y = function() {
    W.forEach(function(r2) {
      if (r2 === null || r2 === void 0 ? void 0 : r2.parentNode) {
        r2.parentNode.removeChild(r2);
      }
    });
    W.length = 0;
  };
  var Z = function(r2) {
    I.push(r2);
    return x;
  };
  var $ = function(r2) {
    K.push(r2);
    return x;
  };
  var rr = function(r2) {
    M.push(r2);
    return x;
  };
  var nr = function(r2) {
    j.push(r2);
    return x;
  };
  var er = function(r2) {
    o = addClassToArray(o, r2);
    return x;
  };
  var ir = function(r2) {
    v = addClassToArray(v, r2);
    return x;
  };
  var tr = function(r2) {
    if (r2 === void 0) {
      r2 = {};
    }
    s = r2;
    return x;
  };
  var ar = function(r2) {
    if (r2 === void 0) {
      r2 = [];
    }
    for (var n2 = 0, e2 = r2; n2 < e2.length; n2++) {
      var i2 = e2[n2];
      s[i2] = "";
    }
    return x;
  };
  var fr = function(r2) {
    l = addClassToArray(l, r2);
    return x;
  };
  var ur = function(r2) {
    y = addClassToArray(y, r2);
    return x;
  };
  var or = function(r2) {
    if (r2 === void 0) {
      r2 = {};
    }
    m = r2;
    return x;
  };
  var vr = function(r2) {
    if (r2 === void 0) {
      r2 = [];
    }
    for (var n2 = 0, e2 = r2; n2 < e2.length; n2++) {
      var i2 = e2[n2];
      m[i2] = "";
    }
    return x;
  };
  var dr = function() {
    if (a !== void 0) {
      return a;
    }
    if (c) {
      return c.getFill();
    }
    return "both";
  };
  var cr = function() {
    if (C !== void 0) {
      return C;
    }
    if (f !== void 0) {
      return f;
    }
    if (c) {
      return c.getDirection();
    }
    return "normal";
  };
  var sr = function() {
    if (A) {
      return "linear";
    }
    if (i !== void 0) {
      return i;
    }
    if (c) {
      return c.getEasing();
    }
    return "linear";
  };
  var lr = function() {
    if (g) {
      return 0;
    }
    if (b !== void 0) {
      return b;
    }
    if (e !== void 0) {
      return e;
    }
    if (c) {
      return c.getDuration();
    }
    return 0;
  };
  var yr = function() {
    if (t !== void 0) {
      return t;
    }
    if (c) {
      return c.getIterations();
    }
    return 1;
  };
  var mr = function() {
    if (_ !== void 0) {
      return _;
    }
    if (n !== void 0) {
      return n;
    }
    if (c) {
      return c.getDelay();
    }
    return 0;
  };
  var pr = function() {
    return u;
  };
  var Ar = function(r2) {
    f = r2;
    Kr(true);
    return x;
  };
  var gr = function(r2) {
    a = r2;
    Kr(true);
    return x;
  };
  var Cr = function(r2) {
    n = r2;
    Kr(true);
    return x;
  };
  var br = function(r2) {
    i = r2;
    Kr(true);
    return x;
  };
  var _r = function(r2) {
    if (!B && r2 === 0) {
      r2 = 1;
    }
    e = r2;
    Kr(true);
    return x;
  };
  var Pr = function(r2) {
    t = r2;
    Kr(true);
    return x;
  };
  var Sr = function(r2) {
    c = r2;
    return x;
  };
  var Tr = function(r2) {
    if (r2 != null) {
      if (r2.nodeType === 1) {
        D.push(r2);
      } else if (r2.length >= 0) {
        for (var n2 = 0; n2 < r2.length; n2++) {
          D.push(r2[n2]);
        }
      } else {
        console.error("Invalid addElement value");
      }
    }
    return x;
  };
  var xr = function(r2) {
    if (r2 != null) {
      if (Array.isArray(r2)) {
        for (var n2 = 0, e2 = r2; n2 < e2.length; n2++) {
          var i2 = e2[n2];
          i2.parent(x);
          F.push(i2);
        }
      } else {
        r2.parent(x);
        F.push(r2);
      }
    }
    return x;
  };
  var Er = function(r2) {
    var n2 = u !== r2;
    u = r2;
    if (n2) {
      wr(u);
    }
    return x;
  };
  var wr = function(r2) {
    if (B) {
      G().forEach(function(n2) {
        var e2 = n2.effect;
        if (e2.setKeyframes) {
          e2.setKeyframes(r2);
        } else {
          var i2 = new KeyframeEffect(e2.target, r2, e2.getTiming());
          n2.effect = i2;
        }
      });
    }
  };
  var hr = function() {
    I.forEach(function(r3) {
      return r3();
    });
    K.forEach(function(r3) {
      return r3();
    });
    var r2 = o;
    var n2 = v;
    var e2 = s;
    D.forEach(function(i2) {
      var t2 = i2.classList;
      r2.forEach(function(r3) {
        return t2.add(r3);
      });
      n2.forEach(function(r3) {
        return t2.remove(r3);
      });
      for (var a2 in e2) {
        if (e2.hasOwnProperty(a2)) {
          setStyleProperty(i2, a2, e2[a2]);
        }
      }
    });
  };
  var kr = function() {
    M.forEach(function(r3) {
      return r3();
    });
    j.forEach(function(r3) {
      return r3();
    });
    var r2 = P ? 1 : 0;
    var n2 = l;
    var e2 = y;
    var i2 = m;
    D.forEach(function(r3) {
      var t2 = r3.classList;
      n2.forEach(function(r4) {
        return t2.add(r4);
      });
      e2.forEach(function(r4) {
        return t2.remove(r4);
      });
      for (var a2 in i2) {
        if (i2.hasOwnProperty(a2)) {
          setStyleProperty(r3, a2, i2[a2]);
        }
      }
    });
    b = void 0;
    C = void 0;
    _ = void 0;
    h.forEach(function(n3) {
      return n3.c(r2, x);
    });
    k.forEach(function(n3) {
      return n3.c(r2, x);
    });
    k.length = 0;
    T = true;
    if (P) {
      S = true;
    }
    P = true;
  };
  var Rr = function() {
    if (p === 0) {
      return;
    }
    p--;
    if (p === 0) {
      kr();
      if (c) {
        c.animationFinish();
      }
    }
  };
  var Dr = function() {
    D.forEach(function(r2) {
      var n2 = r2.animate(u, { id: w, delay: mr(), duration: lr(), easing: sr(), iterations: yr(), fill: dr(), direction: cr() });
      n2.pause();
      q.push(n2);
    });
    if (q.length > 0) {
      q[0].onfinish = function() {
        Rr();
      };
    }
  };
  var Fr = function() {
    hr();
    if (u.length > 0) {
      if (B) {
        Dr();
      }
    }
    d = true;
  };
  var Wr = function(r2) {
    r2 = Math.min(Math.max(r2, 0), 0.9999);
    if (B) {
      q.forEach(function(n2) {
        n2.currentTime = n2.effect.getComputedTiming().delay + lr() * r2;
        n2.pause();
      });
    }
  };
  var Ir = function(r2) {
    q.forEach(function(r3) {
      r3.effect.updateTiming({ delay: mr(), duration: lr(), easing: sr(), iterations: yr(), fill: dr(), direction: cr() });
    });
    if (r2 !== void 0) {
      Wr(r2);
    }
  };
  var Kr = function(r2, n2, e2) {
    if (r2 === void 0) {
      r2 = false;
    }
    if (n2 === void 0) {
      n2 = true;
    }
    if (r2) {
      F.forEach(function(i2) {
        i2.update(r2, n2, e2);
      });
    }
    if (B) {
      Ir(e2);
    }
    return x;
  };
  var Mr = function(r2, n2) {
    if (r2 === void 0) {
      r2 = false;
    }
    F.forEach(function(e2) {
      e2.progressStart(r2, n2);
    });
    zr();
    A = r2;
    if (!d) {
      Fr();
    }
    Kr(false, true, n2);
    return x;
  };
  var jr = function(r2) {
    F.forEach(function(n2) {
      n2.progressStep(r2);
    });
    Wr(r2);
    return x;
  };
  var qr = function(r2, n2, e2) {
    A = false;
    F.forEach(function(i2) {
      i2.progressEnd(r2, n2, e2);
    });
    if (e2 !== void 0) {
      b = e2;
    }
    S = false;
    P = true;
    if (r2 === 0) {
      C = cr() === "reverse" ? "normal" : "reverse";
      if (C === "reverse") {
        P = false;
      }
      if (B) {
        Kr();
        Wr(1 - n2);
      } else {
        _ = (1 - n2) * lr() * -1;
        Kr(false, false);
      }
    } else if (r2 === 1) {
      if (B) {
        Kr();
        Wr(n2);
      } else {
        _ = n2 * lr() * -1;
        Kr(false, false);
      }
    }
    if (r2 !== void 0 && !c) {
      Lr();
    }
    return x;
  };
  var zr = function() {
    if (d) {
      if (B) {
        q.forEach(function(r2) {
          r2.pause();
        });
      } else {
        D.forEach(function(r2) {
          setStyleProperty(r2, "animation-play-state", "paused");
        });
      }
      E = true;
    }
  };
  var Br = function() {
    F.forEach(function(r2) {
      r2.pause();
    });
    zr();
    return x;
  };
  var Gr = function() {
    Rr();
  };
  var Hr = function() {
    q.forEach(function(r2) {
      r2.play();
    });
    if (u.length === 0 || D.length === 0) {
      Rr();
    }
  };
  var Jr = function() {
    if (B) {
      Wr(0);
      Ir();
    }
  };
  var Lr = function(r2) {
    return new Promise(function(n2) {
      if (r2 === null || r2 === void 0 ? void 0 : r2.sync) {
        g = true;
        U(function() {
          return g = false;
        }, { oneTimeCallback: true });
      }
      if (!d) {
        Fr();
      }
      if (S) {
        Jr();
        S = false;
      }
      if (T) {
        p = F.length + 1;
        T = false;
      }
      var e2 = function() {
        O(i2, k);
        n2();
      };
      var i2 = function() {
        O(e2, R);
        n2();
      };
      U(i2, { oneTimeCallback: true });
      Q(e2, { oneTimeCallback: true });
      F.forEach(function(r3) {
        r3.play();
      });
      if (B) {
        Hr();
      } else {
        Gr();
      }
      E = false;
    });
  };
  var Nr = function() {
    F.forEach(function(r2) {
      r2.stop();
    });
    if (d) {
      X();
      d = false;
    }
    L();
    R.forEach(function(r2) {
      return r2.c(0, x);
    });
    R.length = 0;
  };
  var Or = function(r2, n2) {
    var e2;
    var i2 = u[0];
    if (i2 !== void 0 && (i2.offset === void 0 || i2.offset === 0)) {
      i2[r2] = n2;
    } else {
      u = __spreadArray([(e2 = { offset: 0 }, e2[r2] = n2, e2)], u, true);
    }
    return x;
  };
  var Qr = function(r2, n2) {
    var e2;
    var i2 = u[u.length - 1];
    if (i2 !== void 0 && (i2.offset === void 0 || i2.offset === 1)) {
      i2[r2] = n2;
    } else {
      u = __spreadArray(__spreadArray([], u, true), [(e2 = { offset: 1 }, e2[r2] = n2, e2)], false);
    }
    return x;
  };
  var Ur = function(r2, n2, e2) {
    return Or(r2, n2).to(r2, e2);
  };
  return x = { parentAnimation: c, elements: D, childAnimations: F, id: w, animationFinish: Rr, from: Or, to: Qr, fromTo: Ur, parent: Sr, play: Lr, pause: Br, stop: Nr, destroy: H2, keyframes: Er, addAnimation: xr, addElement: Tr, update: Kr, fill: gr, direction: Ar, iterations: Pr, duration: _r, easing: br, delay: Cr, getWebAnimations: G, getKeyframes: pr, getFill: dr, getDirection: cr, getDelay: mr, getIterations: yr, getEasing: sr, getDuration: lr, afterAddRead: rr, afterAddWrite: nr, afterClearStyles: vr, afterStyles: or, afterRemoveClass: ur, afterAddClass: fr, beforeAddRead: Z, beforeAddWrite: $, beforeClearStyles: ar, beforeStyles: tr, beforeRemoveClass: ir, beforeAddClass: er, onFinish: U, isRunning: N, progressStart: Mr, progressStep: jr, progressEnd: qr };
};

// node_modules/@ionic/core/dist/esm-es5/index-c71c5417.js
var __defProp = Object.defineProperty;
var __export = function(e, t) {
  for (var r in t)
    __defProp(e, r, { get: t[r], enumerable: true });
};
var result_exports = {};
__export(result_exports, { err: function() {
  return err;
}, map: function() {
  return map;
}, ok: function() {
  return ok;
}, unwrap: function() {
  return unwrap;
}, unwrapErr: function() {
  return unwrapErr;
} });
var ok = function(e) {
  return { isOk: true, isErr: false, value: e };
};
var err = function(e) {
  return { isOk: false, isErr: true, value: e };
};
function map(e, t) {
  if (e.isOk) {
    var r = t(e.value);
    if (r instanceof Promise) {
      return r.then(function(e2) {
        return ok(e2);
      });
    } else {
      return ok(r);
    }
  }
  if (e.isErr) {
    var n = e.value;
    return err(n);
  }
  throw "should never get here";
}
var unwrap = function(e) {
  if (e.isOk) {
    return e.value;
  } else {
    throw e.value;
  }
};
var unwrapErr = function(e) {
  if (e.isErr) {
    return e.value;
  } else {
    throw e.value;
  }
};
var setMode = function(e) {
  return modeResolutionChain.push(e);
};
var getMode = function(e) {
  return getHostRef(e).D;
};
var CAPTURE_EVENT_SUFFIX = "Capture";
var CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + "$");
var hostRefs = /* @__PURE__ */ new WeakMap();
var getHostRef = function(e) {
  return hostRefs.get(e);
};
var consoleError = function(e, t) {
  return (0, console.error)(e, t);
};
var modeResolutionChain = [];
var win2 = typeof window !== "undefined" ? window : {};
var doc2 = win2.document || { head: {} };
var H = win2.HTMLElement || /* @__PURE__ */ function() {
  function e() {
  }
  return e;
}();
var plt = { p: 0, t: "", jmp: function(e) {
  return e();
}, raf: function(e) {
  return requestAnimationFrame(e);
}, ael: function(e, t, r, n) {
  return e.addEventListener(t, r, n);
}, rel: function(e, t, r, n) {
  return e.removeEventListener(t, r, n);
}, ce: function(e, t) {
  return new CustomEvent(e, t);
} };
var setPlatformHelpers = function(e) {
  Object.assign(plt, e);
};
var supportsListenerOptions = function() {
  var e = false;
  try {
    doc2.addEventListener("e", null, Object.defineProperty({}, "passive", { get: function() {
      e = true;
    } }));
  } catch (e2) {
  }
  return e;
}();
var promiseResolve = function(e) {
  return Promise.resolve(e);
};
var supportsConstructableStylesheets = function() {
  try {
    new CSSStyleSheet();
    return typeof new CSSStyleSheet().replaceSync === "function";
  } catch (e) {
  }
  return false;
}();
var queuePending = false;
var queueDomReads = [];
var queueDomWrites = [];
var queueTask = function(e, t) {
  return function(r) {
    e.push(r);
    if (!queuePending) {
      queuePending = true;
      if (t && plt.p & 4) {
        nextTick(flush);
      } else {
        plt.raf(flush);
      }
    }
  };
};
var consume = function(e) {
  for (var t = 0; t < e.length; t++) {
    try {
      e[t](performance.now());
    } catch (e2) {
      consoleError(e2);
    }
  }
  e.length = 0;
};
var flush = function() {
  consume(queueDomReads);
  {
    consume(queueDomWrites);
    if (queuePending = queueDomReads.length > 0) {
      plt.raf(flush);
    }
  }
};
var nextTick = function(e) {
  return promiseResolve().then(e);
};
var readTask = queueTask(queueDomReads, false);
var writeTask = queueTask(queueDomWrites, true);

// node_modules/@ionic/core/dist/esm-es5/ionic-global-b9c0d1da.js
var Config = function() {
  function i() {
    this.m = /* @__PURE__ */ new Map();
  }
  i.prototype.reset = function(i2) {
    this.m = new Map(Object.entries(i2));
  };
  i.prototype.get = function(i2, t) {
    var n = this.m.get(i2);
    return n !== void 0 ? n : t;
  };
  i.prototype.getBoolean = function(i2, t) {
    if (t === void 0) {
      t = false;
    }
    var n = this.m.get(i2);
    if (n === void 0) {
      return t;
    }
    if (typeof n === "string") {
      return n === "true";
    }
    return !!n;
  };
  i.prototype.getNumber = function(i2, t) {
    var n = parseFloat(this.m.get(i2));
    return isNaN(n) ? t !== void 0 ? t : NaN : n;
  };
  i.prototype.set = function(i2, t) {
    this.m.set(i2, t);
  };
  return i;
}();
var config = new Config();
var configFromSession = function(i) {
  try {
    var t = i.sessionStorage.getItem(IONIC_SESSION_KEY);
    return t !== null ? JSON.parse(t) : {};
  } catch (i2) {
    return {};
  }
};
var saveConfig = function(i, t) {
  try {
    i.sessionStorage.setItem(IONIC_SESSION_KEY, JSON.stringify(t));
  } catch (i2) {
    return;
  }
};
var configFromURL = function(i) {
  var t = {};
  i.location.search.slice(1).split("&").map(function(i2) {
    return i2.split("=");
  }).map(function(i2) {
    var t2 = i2[0], n = i2[1];
    try {
      return [decodeURIComponent(t2), decodeURIComponent(n)];
    } catch (i3) {
      return ["", ""];
    }
  }).filter(function(i2) {
    var t2 = i2[0];
    return startsWith(t2, IONIC_PREFIX);
  }).map(function(i2) {
    var t2 = i2[0], n = i2[1];
    return [t2.slice(IONIC_PREFIX.length), n];
  }).forEach(function(i2) {
    var n = i2[0], r = i2[1];
    t[n] = r;
  });
  return t;
};
var startsWith = function(i, t) {
  return i.substr(0, t.length) === t;
};
var IONIC_PREFIX = "ionic:";
var IONIC_SESSION_KEY = "ionic-persist-config";
var getPlatforms = function(i) {
  return setupPlatforms(i);
};
var isPlatform = function(i, t) {
  if (typeof i === "string") {
    t = i;
    i = void 0;
  }
  return getPlatforms(i).includes(t);
};
var setupPlatforms = function(i) {
  if (i === void 0) {
    i = window;
  }
  if (typeof i === "undefined") {
    return [];
  }
  i.Ionic = i.Ionic || {};
  var t = i.Ionic.platforms;
  if (t == null) {
    t = i.Ionic.platforms = detectPlatforms(i);
    t.forEach(function(t2) {
      return i.document.documentElement.classList.add("plt-".concat(t2));
    });
  }
  return t;
};
var detectPlatforms = function(i) {
  var t = config.get("platform");
  return Object.keys(PLATFORMS_MAP).filter(function(n) {
    var r = t === null || t === void 0 ? void 0 : t[n];
    return typeof r === "function" ? r(i) : PLATFORMS_MAP[n](i);
  });
};
var isMobileWeb = function(i) {
  return isMobile(i) && !isHybrid(i);
};
var isIpad = function(i) {
  if (testUserAgent(i, /iPad/i)) {
    return true;
  }
  if (testUserAgent(i, /Macintosh/i) && isMobile(i)) {
    return true;
  }
  return false;
};
var isIphone = function(i) {
  return testUserAgent(i, /iPhone/i);
};
var isIOS = function(i) {
  return testUserAgent(i, /iPhone|iPod/i) || isIpad(i);
};
var isAndroid = function(i) {
  return testUserAgent(i, /android|sink/i);
};
var isAndroidTablet = function(i) {
  return isAndroid(i) && !testUserAgent(i, /mobile/i);
};
var isPhablet = function(i) {
  var t = i.innerWidth;
  var n = i.innerHeight;
  var r = Math.min(t, n);
  var e = Math.max(t, n);
  return r > 390 && r < 520 && e > 620 && e < 800;
};
var isTablet = function(i) {
  var t = i.innerWidth;
  var n = i.innerHeight;
  var r = Math.min(t, n);
  var e = Math.max(t, n);
  return isIpad(i) || isAndroidTablet(i) || r > 460 && r < 820 && e > 780 && e < 1400;
};
var isMobile = function(i) {
  return matchMedia(i, "(any-pointer:coarse)");
};
var isDesktop = function(i) {
  return !isMobile(i);
};
var isHybrid = function(i) {
  return isCordova(i) || isCapacitorNative(i);
};
var isCordova = function(i) {
  return !!(i["cordova"] || i["phonegap"] || i["PhoneGap"]);
};
var isCapacitorNative = function(i) {
  var t = i["Capacitor"];
  return !!(t === null || t === void 0 ? void 0 : t.isNative);
};
var isElectron = function(i) {
  return testUserAgent(i, /electron/i);
};
var isPWA = function(i) {
  var t;
  return !!(((t = i.matchMedia) === null || t === void 0 ? void 0 : t.call(i, "(display-mode: standalone)").matches) || i.navigator.standalone);
};
var testUserAgent = function(i, t) {
  return t.test(i.navigator.userAgent);
};
var matchMedia = function(i, t) {
  var n;
  return (n = i.matchMedia) === null || n === void 0 ? void 0 : n.call(i, t).matches;
};
var PLATFORMS_MAP = { ipad: isIpad, iphone: isIphone, ios: isIOS, android: isAndroid, phablet: isPhablet, tablet: isTablet, cordova: isCordova, capacitor: isCapacitorNative, electron: isElectron, pwa: isPWA, mobile: isMobile, mobileweb: isMobileWeb, desktop: isDesktop, hybrid: isHybrid };
var defaultMode;
var getIonMode = function(i) {
  return i && getMode(i) || defaultMode;
};
var initialize = function(i) {
  if (i === void 0) {
    i = {};
  }
  if (typeof window === "undefined") {
    return;
  }
  var t = window.document;
  var n = window;
  var r = n.Ionic = n.Ionic || {};
  var e = {};
  if (i._ael) {
    e.ael = i._ael;
  }
  if (i._rel) {
    e.rel = i._rel;
  }
  if (i._ce) {
    e.ce = i._ce;
  }
  setPlatformHelpers(e);
  var o = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, configFromSession(n)), { persistConfig: false }), r.config), configFromURL(n)), i);
  config.reset(o);
  if (config.getBoolean("persistConfig")) {
    saveConfig(n, o);
  }
  setupPlatforms(n);
  r.config = config;
  r.mode = defaultMode = config.get("mode", t.documentElement.getAttribute("mode") || (isPlatform(n, "ios") ? "ios" : "md"));
  config.set("mode", defaultMode);
  t.documentElement.setAttribute("mode", defaultMode);
  t.documentElement.classList.add(defaultMode);
  if (config.getBoolean("_testing")) {
    config.set("animated", false);
  }
  var a = function(i2) {
    var t2;
    return (t2 = i2.tagName) === null || t2 === void 0 ? void 0 : t2.startsWith("ION-");
  };
  var s = function(i2) {
    return ["ios", "md"].includes(i2);
  };
  setMode(function(i2) {
    while (i2) {
      var t2 = i2.mode || i2.getAttribute("mode");
      if (t2) {
        if (s(t2)) {
          return t2;
        } else if (a(i2)) {
          console.warn('Invalid ionic mode: "' + t2 + '", expected: "ios" or "md"');
        }
      }
      i2 = i2.parentElement;
    }
    return defaultMode;
  });
};

// node_modules/@ionic/core/dist/esm-es5/index-9b0d46f4.js
var printIonWarning = function(r) {
  var n = [];
  for (var o = 1; o < arguments.length; o++) {
    n[o - 1] = arguments[o];
  }
  return console.warn.apply(console, __spreadArray(["[Ionic Warning]: ".concat(r)], n, false));
};

// node_modules/@ionic/core/dist/esm-es5/helpers-da915de8.js
var componentOnReady = function(r, a) {
  if (r.componentOnReady) {
    r.componentOnReady().then(function(r2) {
      return a(r2);
    });
  } else {
    raf(function() {
      return a(r);
    });
  }
};
var raf = function(r) {
  if (typeof __zone_symbol__requestAnimationFrame === "function") {
    return __zone_symbol__requestAnimationFrame(r);
  }
  if (typeof requestAnimationFrame === "function") {
    return requestAnimationFrame(r);
  }
  return setTimeout(r);
};

// node_modules/@ionic/core/dist/esm-es5/index-92f14156.js
var LIFECYCLE_WILL_ENTER = "ionViewWillEnter";
var LIFECYCLE_DID_ENTER = "ionViewDidEnter";
var LIFECYCLE_WILL_LEAVE = "ionViewWillLeave";
var LIFECYCLE_DID_LEAVE = "ionViewDidLeave";
var LIFECYCLE_WILL_UNLOAD = "ionViewWillUnload";
var moveFocus = function(n) {
  n.tabIndex = -1;
  n.focus();
};
var isVisible = function(n) {
  return n.offsetParent !== null;
};
var createFocusController = function() {
  var n = function(n2) {
    var e2 = config.get("focusManagerPriority", false);
    if (e2) {
      var r = document.activeElement;
      if (r !== null && (n2 === null || n2 === void 0 ? void 0 : n2.contains(r))) {
        r.setAttribute(LAST_FOCUS, "true");
      }
    }
  };
  var e = function(n2) {
    var e2 = config.get("focusManagerPriority", false);
    if (Array.isArray(e2) && !n2.contains(document.activeElement)) {
      var r = n2.querySelector("[".concat(LAST_FOCUS, "]"));
      if (r && isVisible(r)) {
        moveFocus(r);
        return;
      }
      for (var i = 0, t = e2; i < t.length; i++) {
        var a = t[i];
        switch (a) {
          case "content":
            var o = n2.querySelector('main, [role="main"]');
            if (o && isVisible(o)) {
              moveFocus(o);
              return;
            }
            break;
          case "heading":
            var s = n2.querySelector('h1, [role="heading"][aria-level="1"]');
            if (s && isVisible(s)) {
              moveFocus(s);
              return;
            }
            break;
          case "banner":
            var u = n2.querySelector('header, [role="banner"]');
            if (u && isVisible(u)) {
              moveFocus(u);
              return;
            }
            break;
          default:
            printIonWarning("Unrecognized focus manager priority value ".concat(a));
            break;
        }
      }
      moveFocus(n2);
    }
  };
  return { saveViewFocus: n, setViewFocus: e };
};
var LAST_FOCUS = "ion-last-focus";
var focusController = createFocusController();
var getIonPageElement = function(n) {
  if (n.classList.contains("ion-page")) {
    return n;
  }
  var e = n.querySelector(":scope > .ion-page, :scope > ion-nav, :scope > ion-tabs");
  if (e) {
    return e;
  }
  return n;
};

export {
  doc,
  createAnimation,
  getPlatforms,
  isPlatform,
  getIonMode,
  initialize,
  printIonWarning,
  componentOnReady,
  LIFECYCLE_WILL_ENTER,
  LIFECYCLE_DID_ENTER,
  LIFECYCLE_WILL_LEAVE,
  LIFECYCLE_DID_LEAVE,
  LIFECYCLE_WILL_UNLOAD,
  getIonPageElement
};
/*! Bundled license information:

@ionic/core/dist/esm-es5/index-a5d50daf.js:
  (*!
   * (C) Ionic http://ionicframework.com - MIT License
   *)

@ionic/core/dist/esm-es5/animation-eab5a4ca.js:
  (*!
   * (C) Ionic http://ionicframework.com - MIT License
   *)

@ionic/core/dist/esm-es5/index-c71c5417.js:
  (*!
   * (C) Ionic http://ionicframework.com - MIT License
   *)

@ionic/core/dist/esm-es5/ionic-global-b9c0d1da.js:
  (*!
   * (C) Ionic http://ionicframework.com - MIT License
   *)

@ionic/core/dist/esm-es5/index-9b0d46f4.js:
  (*!
   * (C) Ionic http://ionicframework.com - MIT License
   *)

@ionic/core/dist/esm-es5/helpers-da915de8.js:
  (*!
   * (C) Ionic http://ionicframework.com - MIT License
   *)

@ionic/core/dist/esm-es5/index-92f14156.js:
  (*!
   * (C) Ionic http://ionicframework.com - MIT License
   *)
*/
//# sourceMappingURL=chunk-TN742WGI.js.map
